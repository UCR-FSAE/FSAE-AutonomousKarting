<?xml version="1.0"?>
<robot name="gokart" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:macro name="drive_wheel" params="prefix y_reflect ">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0.09525 0" rpy="${pi/2} 0 0" />
        <geometry>
          <mesh filename="file://$(find roar-urdf)/meshes/gokart/WheelV1.stl" />
        </geometry>
        <material name="Gray">
          <color rgba="0.5 0.5 0.5 1.0" />
        </material>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}" />
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}" />
    </link>

    <!-- Connect the wheels to the base_link at the appropriate location, and
       define a continuous joint to allow the wheels to freely rotate about
       an axis. For some reason, continous joint breaks on my computer-->
    <joint name="${prefix}_joint" type="fixed">
      <parent link="base_link" />
      <child link="${prefix}_link" />
      <origin xyz="0 ${y_reflect*(base_width/2)} 0" rpy="0 0 0" />
      <axis xyz="0 1 0" />
    </joint>

    <!-- <gazebo reference="${prefix}_link">
      <material>Gazebo/Grey</material>
      <collision>
        <surface>
          <friction>
            <ode>
              <mu>1.3</mu>
              <mu2>1.3</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
    </gazebo> -->
  </xacro:macro>

  <xacro:macro name="steer_wheel" params="prefix y_reflect">
    <!-- Steer hinge -->
    <link name="${prefix}_steer_link">
      <xacro:cylinder_inertia m="0.1" r="${wheel_radius}" h="${wheel_width}" />
    </link>

    <!-- Connect the steer_link to the base_link at the appropriate location, and
       define a continuous joint to allow the wheels to freely rotate about
       an axis -->
    <joint name="${prefix}_steer_joint" type="fixed">
      <parent link="base_link" />
      <child link="${prefix}_steer_link" />
      <origin xyz="${base_length} ${y_reflect*(base_width/2-steering_hinge_offset)} 0" rpy="0 0 0" />
      <axis xyz="0 0 1" />
    </joint>

    <!-- Wheel -->
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0.09525 0" rpy="${pi/2} 0 0" />
        <geometry>
          <mesh filename="file://$(find roar-urdf)/meshes/gokart/WheelV1.stl" />
          <!-- <cylinder radius="${wheel_radius}" length="${wheel_width}" /> -->
        </geometry>
        <material name="Gray">
          <color rgba="0.5 0.5 0.5 1.0" />
        </material>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}" />
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}" />
    </link>

    <!-- Connect the wheels to the steer_link at the appropriate location, and
       define a continuous joint to allow the wheels to freely rotate about
       an axis -->
    <joint name="${prefix}_joint" type="fixed">
      <parent link="${prefix}_steer_link" />
      <child link="${prefix}_link" />
      <origin xyz="0 ${y_reflect*steering_hinge_offset} 0" rpy="0 0 0" />
      <axis xyz="0 1 0" />
    </joint>

    <gazebo reference="${prefix}_link">
      <material>Gazebo/Grey</material>
      <collision>
        <surface>
          <friction>
            <ode>
              <mu>1.3</mu>
              <mu2>1.3</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
    </gazebo>
  </xacro:macro>

  <!-- Instantiate two wheels using the macros defined above.
       We also set the parameters so that we have one wheel
       on both sides at the back of our robot (i.e. x_reflect=-1). -->
  <xacro:drive_wheel prefix="wheel_rl" y_reflect="1" />
  <xacro:drive_wheel prefix="wheel_rr" y_reflect="-1" />

  <xacro:steer_wheel prefix="wheel_fl" y_reflect="1" />
  <xacro:steer_wheel prefix="wheel_fr" y_reflect="-1" />

</robot>
